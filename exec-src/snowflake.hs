import Control.Monad( replicateM )
import Data.Monoid( (<>) )
import qualified Data.Vector as V
import Codec.Picture
    ( Image
    , PixelRGBA8( .. )
    , writePng
    )
import Graphics.Rasterific
    ( Drawing
    , Bezier( .. )
    , V2( .. )
    , Point
    , fill
    , withTransformation
    , withTexture
    , renderDrawing
    )
import Graphics.Rasterific.Transformations
    ( Transformation
    , translate
    , scale
    , rotate
    )

import Graphics.Rasterific.Texture( uniformTexture )
import System.Random( randomRIO )
import Criterion( whnf, bench )
import Criterion.Main( defaultMain )

snowflakeColor :: PixelRGBA8
snowflakeColor = PixelRGBA8 255 229 255 178

snowflake :: [Bezier]
snowflake =
   let b x1 y1 x2 y2 x3 y3 = Bezier (V2 x1 y1) (V2 x2 y2) (V2 x3 y3) in
   [b 16.8063 (-26.3434) 17.7989 (-25.3508) 16.8009 (-22.7501),
    b 16.8009 (-22.7501) 16.3070 (-21.4629) 16.5456 (-21.1093),
    b 16.5456 (-21.1093) 16.6644 (-20.9332) 16.9645 (-20.9931),
    b 16.9645 (-20.9931) 17.2654 (-21.0532) 17.7455 (-21.3499),
    b 17.7455 (-21.3499) 18.6092 (-21.8837) 19.1487 (-21.5293),
    b 19.1487 (-21.5293) 19.6882 (-21.1749) 19.6882 (-20.0737),
    b 19.6882 (-20.0737) 19.6882 (-17.5969) 16.1479 (-16.4732),
    b 16.1479 (-16.4732) 14.0548 (-15.8089) 13.8003 (-15.2770),
    b 13.8003 (-15.2770) 13.6623 (-14.9887) 13.9414 (-14.6446),
    b 13.9414 (-14.6446) 14.2041 (-14.3207) 14.9025 (-13.8707),
    b 14.9025 (-13.8707) 16.3494 (-12.9382) 16.3133 (-12.3628),
    b 16.3133 (-12.3628) 16.2771 (-11.7875) 14.7068 (-10.7566),
    b 14.7068 (-10.7566) 12.2161 (-9.1216) 10.3181 (-9.0962),
    b 10.3181 (-9.0962) 8.4202 (-9.0707) 7.4644 (-6.5800),
    b 7.4644 (-6.5800) 7.0056 (-5.3844) 7.6667 (-4.7020),
    b 7.6667 (-4.7020) 8.2718 (-4.0775) 9.5712 (-4.0812),
    b 9.5712 (-4.0812) 12.6401 (-4.0898) 14.7238 (-6.6005),
    b 14.7238 (-6.6005) 15.9127 (-8.0330) 16.8479 (-8.1677),
    b 16.8479 (-8.1677) 17.7831 (-8.3023) 19.0783 (-7.2274),
    b 19.0783 (-7.2274) 20.3558 (-6.1671) 21.3969 (-6.2071),
    b 21.3969 (-6.2071) 22.4379 (-6.2471) 23.8394 (-7.4103),
    b 23.8394 (-7.4103) 24.8668 (-8.2629) 25.5985 (-8.5665),
    b 25.5985 (-8.5665) 25.9438 (-8.7099) 26.1336 (-8.6820),
    b 26.1336 (-8.6820) 26.2297 (-8.6679) 26.2793 (-8.6092),
    b 26.2793 (-8.6092) 26.3301 (-8.5490) 26.3301 (-8.4438),
    b 26.3301 (-8.4438) 26.3301 (-5.0516) 28.9388 (-3.5917),
    b 28.9388 (-3.5917) 31.2406 (-2.3035) 31.1691 (-0.4840),
    b 31.1691 (-0.4840) 31.0976 1.3355 28.5951 5.1548,
    b 28.5951 5.1548 26.7219 8.0136 25.8517 8.2511,
    b 25.8517 8.2511 24.9814 8.4887 22.9886 6.6852,
    b 22.9886 6.6852 21.0119 4.8963 20.3861 4.9237,
    b 20.3861 4.9237 19.7603 4.9510 19.0285 6.8582,
    b 19.0285 6.8582 18.2849 8.7960 17.6638 8.8069,
    b 17.6638 8.8069 17.0427 8.8178 14.9565 6.9298,
    b 14.9565 6.9298 11.9546 4.2131 8.9762 4.2131,
    b 8.9762 4.2131 7.1317 4.2131 6.9583 4.6873,
    b 6.9583 4.6873 6.7848 5.1614 8.0649 6.7038,
    b 8.0649 6.7038 10.1320 9.1945 12.3214 9.1945,
    b 12.3214 9.1945 14.7027 9.1945 15.6210 11.1190,
    b 15.6210 11.1190 16.0194 11.9541 15.8094 12.7617,
    b 15.8094 12.7617 15.5824 13.6348 14.7001 14.1801,
    b 14.7001 14.1801 14.1325 14.5309 13.9378 14.8353,
    b 13.9378 14.8353 13.7389 15.1460 13.9115 15.4341,
    b 13.9115 15.4341 14.2467 15.9936 16.1479 16.5970,
    b 16.1479 16.5970 18.7443 17.4211 19.5750 19.1195,
    b 19.5750 19.1195 19.9313 19.8481 19.6103 20.3129,
    b 19.6103 20.3129 19.2615 20.8179 18.2122 20.8179,
    b 18.2122 20.8179 17.6034 20.8179 17.2376 21.6705,
    b 17.2376 21.6705 16.8717 22.5231 16.9669 23.7204,
    b 16.9669 23.7204 17.1008 25.4064 15.8033 26.0897,
    b 15.8033 26.0897 14.5057 26.7730 10.7752 26.9810,
    b 10.7752 26.9810 6.0003 27.2472 5.2937 26.6088,
    b 5.2937 26.6088 4.5872 25.9703 5.2663 22.0029,
    b 5.2663 22.0029 5.6431 19.8017 5.6598 18.8439,
    b 5.6598 18.8439 5.6678 18.3914 5.5838 18.3574,
    b 5.5838 18.3574 5.5413 18.3400 5.4768 18.4343,
    b 5.4768 18.4343 5.4106 18.5310 5.3234 18.7423,
    b 5.3234 18.7423 4.7144 20.2184 4.0071 20.6781,
    b 4.0071 20.6781 3.3408 21.1112 2.7449 20.5553,
    b 2.7449 20.5553 1.4230 19.3223 1.4230 15.1042,
    b 1.4230 15.1042 1.4230 9.3905 (-0.2375) 8.3643,
    b (-0.2375) 8.3643 (-0.9317) 7.9353 (-1.3335) 8.1224,
    b (-1.3335) 8.1224 (-1.7565) 8.3193 (-1.9463) 9.2332,
    b (-1.9463) 9.2332 (-2.3005) 10.9392 (-1.9242) 16.4867,
    b (-1.9242) 16.4867 (-1.7256) 19.4124 (-2.2139) 20.1385,
    b (-2.2139) 20.1385 (-2.7021) 20.8646 (-4.4236) 20.2040,
    b (-4.4236) 20.2040 (-5.3338) 19.8547 (-5.8063) 19.8228,
    b (-5.8063) 19.8228 (-6.3221) 19.7879 (-6.5134) 20.1092,
    b (-6.5134) 20.1092 (-6.8561) 20.6848 (-6.2197) 23.2205,
    b (-6.2197) 23.2205 (-5.4941) 26.1115 (-6.2628) 26.6654,
    b (-6.2628) 26.6654 (-7.0315) 27.2192 (-11.4315) 26.9754,
    b (-11.4315) 26.9754 (-14.6467) 26.7972 (-16.1596) 26.1096,
    b (-16.1596) 26.1096 (-17.6725) 25.4220 (-17.6725) 24.1388,
    b (-17.6725) 24.1388 (-17.6725) 21.6481 (-20.1399) 20.1010,
    b (-20.1399) 20.1010 (-20.9108) 19.6177 (-21.1498) 19.2429,
    b (-21.1498) 19.2429 (-21.4069) 18.8398 (-21.1359) 18.4415,
    b (-21.1359) 18.4415 (-20.6423) 17.7160 (-17.6492) 16.4398,
    b (-17.6492) 16.4398 (-15.6040) 15.5678 (-14.7573) 14.9247,
    b (-14.7573) 14.9247 (-14.3575) 14.6212 (-14.3520) 14.4467,
    b (-14.3520) 14.4467 (-14.3492) 14.3583 (-14.4510) 14.3090,
    b (-14.4510) 14.3090 (-14.5554) 14.2584 (-14.7667) 14.2508,
    b (-14.7667) 14.2508 (-16.0660) 14.2039 (-16.5691) 13.6374,
    b (-16.5691) 13.6374 (-17.0373) 13.1100 (-16.7011) 12.2910,
    b (-16.7011) 12.2910 (-15.9365) 10.4285 (-12.6911) 9.1945,
    b (-12.6911) 9.1945 (-8.5399) 7.6163 (-8.5399) 5.9147,
    b (-8.5399) 5.9147 (-8.5399) 4.9917 (-9.2468) 4.5611,
    b (-9.2468) 4.5611 (-9.9051) 4.1601 (-10.9785) 4.2876,
    b (-10.9785) 4.2876 (-13.4170) 4.5773 (-15.1818) 6.7038,
    b (-15.1818) 6.7038 (-17.2242) 9.1648 (-18.6937) 9.0888,
    b (-18.6937) 9.0888 (-19.3865) 9.0531 (-19.7678) 8.3917,
    b (-19.7678) 8.3917 (-20.1632) 7.7061 (-20.1632) 6.4465,
    b (-20.1632) 6.4465 (-20.1632) 5.4062 (-20.2449) 5.0202,
    b (-20.2449) 5.0202 (-20.2958) 4.7792 (-20.3888) 4.6657,
    b (-20.3888) 4.6657 (-20.4850) 4.5484 (-20.6388) 4.5510,
    b (-20.6388) 4.5510 (-21.1144) 4.5592 (-23.2585) 6.4995,
    b (-23.2585) 6.4995 (-25.4562) 8.4884 (-26.3237) 8.2555,
    b (-26.3237) 8.2555 (-27.1911) 8.0226 (-29.2418) 4.8929,
    b (-29.2418) 4.8929 (-32.8702) (-0.6449) (-27.2854) (-8.9222),
    b (-27.2854) (-8.9222) (-27.1923) (-9.0603) (-26.8440) (-8.9490),
    b (-26.8440) (-8.9490) (-26.5078) (-8.8416) (-25.9821) (-8.5181),
    b (-25.9821) (-8.5181) (-24.8684) (-7.8328) (-23.4944) (-6.5892),
    b (-23.4944) (-6.5892) (-21.2502) (-4.5582) (-20.7067) (-4.5148),
    b (-20.7067) (-4.5148) (-20.5369) (-4.5012) (-20.4282) (-4.6082),
    b (-20.4282) (-4.6082) (-20.3227) (-4.7121) (-20.2629) (-4.9421),
    b (-20.2629) (-4.9421) (-20.1632) (-5.3259) (-20.1632) (-6.3227),
    b (-20.1632) (-6.3227) (-20.1632) (-7.5823) (-19.7678) (-8.2679),
    b (-19.7678) (-8.2679) (-19.3865) (-8.9293) (-18.6937) (-8.9650),
    b (-18.6937) (-8.9650) (-17.2242) (-9.0410) (-15.1818) (-6.5800),
    b (-15.1818) (-6.5800) (-13.1147) (-4.0893) (-9.5819) (-4.1446),
    b (-9.5819) (-4.1446) (-8.0423) (-4.1686) (-7.6019) (-4.2262),
    b (-7.6019) (-4.2262) (-7.2663) (-4.2701) (-7.1145) (-4.3531),
    b (-7.1145) (-4.3531) (-6.9551) (-4.4401) (-6.9655) (-4.5868),
    b (-6.9655) (-4.5868) (-6.9938) (-4.9877) (-9.8075) (-7.3346),
    b (-9.8075) (-7.3346) (-13.5659) (-10.4694) (-15.6191) (-11.3041),
    b (-15.6191) (-11.3041) (-16.7771) (-11.7748) (-16.7006) (-12.3216),
    b (-16.7006) (-12.3216) (-16.6241) (-12.8683) (-15.2684) (-13.8117),
    b (-15.2684) (-13.8117) (-14.5195) (-14.3327) (-14.2754) (-14.6893),
    b (-14.2754) (-14.6893) (-14.0134) (-15.0721) (-14.2475) (-15.3790),
    b (-14.2475) (-15.3790) (-14.6746) (-15.9388) (-17.4163) (-16.6270),
    b (-17.4163) (-16.6270) (-20.4849) (-17.3971) (-21.2071) (-19.6020),
    b (-21.2071) (-19.6020) (-21.5026) (-20.5042) (-20.9491) (-20.9641),
    b (-20.9491) (-20.9641) (-20.3358) (-21.4736) (-18.9057) (-21.1743),
    b (-18.9057) (-21.1743) (-18.2157) (-21.0299) (-17.7889) (-21.7606),
    b (-17.7889) (-21.7606) (-17.3621) (-22.4913) (-17.4528) (-23.6617),
    b (-17.4528) (-23.6617) (-17.5781) (-25.2795) (-16.2840) (-25.9644),
    b (-16.2840) (-25.9644) (-14.9899) (-26.6492) (-11.4315) (-26.8483),
    b (-11.4315) (-26.8483) (-7.0311) (-27.0944) (-6.2625) (-26.5413),
    b (-6.2625) (-26.5413) (-5.4940) (-25.9880) (-6.2197) (-23.0967),
    b (-6.2197) (-23.0967) (-6.8550) (-20.5656) (-6.5137) (-19.9873),
    b (-6.5137) (-19.9873) (-6.3235) (-19.6650) (-5.8107) (-19.6981),
    b (-5.8107) (-19.6981) (-5.3404) (-19.7284) (-4.4364) (-20.0753),
    b (-4.4364) (-20.0753) (-3.5146) (-20.4290) (-3.0272) (-20.4124),
    b (-3.0272) (-20.4124) (-2.4901) (-20.3941) (-2.2523) (-19.9329),
    b (-2.2523) (-19.9329) (-1.8302) (-19.1144) (-2.1761) (-15.6924),
    b (-2.1761) (-15.6924) (-2.7282) (-10.2301) (-0.6526) (-9.5121),
    b (-0.6526) (-9.5121) (-0.1235) (-9.3290) 0.2656 (-9.5565),
    b 0.2656 (-9.5565) 0.6565 (-9.7850) 0.9131 (-10.4319),
    b 0.9131 (-10.4319) 1.4230 (-11.7170) 1.4230 (-14.7440),
    b 1.4230 (-14.7440) 1.4230 (-19.1388) 2.7236 (-20.4008),
    b 2.7236 (-20.4008) 3.3172 (-20.9767) 4.0093 (-20.5495),
    b 4.0093 (-20.5495) 4.7393 (-20.0988) 5.4162 (-18.6185),
    b 5.4162 (-18.6185) 5.5129 (-18.4072) 5.5876 (-18.3117),
    b 5.5876 (-18.3117) 5.6605 (-18.2187) 5.7104 (-18.2384),
    b 5.7104 (-18.2384) 5.8087 (-18.2773) 5.8096 (-18.7378),
    b 5.8096 (-18.7378) 5.8115 (-19.7142) 5.4227 (-21.9394),
    b 5.4227 (-21.9394) 4.7390 (-25.8532) 5.3881 (-26.5946),
    b 5.3881 (-26.5946) 6.0371 (-27.3360) 10.1469 (-27.3360),
    b 10.1469 (-27.3360) 15.8137 (-27.3360) 16.8063 (-26.3434)]

data Box = Box
  { _position :: !Point
  , _dy       :: !Float
  , _scale    :: !Float
  , _angle    :: !Float
  , _dangle   :: !Float
  }

randomBox :: Float -> Float -> IO Box
randomBox w h = Box
    <$> pos
    <*> randomRIO (0.5 , 2.2)
    <*> randomRIO (0.2 , 1.7)
    <*> randomRIO (0.0 , 4.0)
    <*> randomRIO (- 0.1 , 0.1)
  where
    pos = V2 
      <$> randomRIO (0.0 , w)
      <*> randomRIO (0.0 , h)

toTransform :: Float -> Float -> Float -> Box -> Transformation
toTransform ww wh zoom box =
  translate (V2 (ww / 2) (wh / 2)) <>
  scale zoom zoom <>
  translate (V2 (-ww / 2) (-wh / 2)) <>
  translate (_position box) <>
  rotate (_angle box) <>
  scale (_scale box) (_scale box)

renderFlake :: Float -> Float -> Float -> Box -> Drawing PixelRGBA8 ()
renderFlake w h zoom box  =
 withTexture (uniformTexture snowflakeColor) . 
   withTransformation (toTransform w h zoom box) $
     fill snowflake

renderFlakes :: Foldable f => Float -> Float -> Float -> f Box -> Image PixelRGBA8
renderFlakes width height zoom boxes =
  renderDrawing (floor width) (floor height) background $
    foldMap (renderFlake width height zoom) boxes
    where
      background = PixelRGBA8 0 0 0 255
      -- background = PixelRGBA8 255 255 255 255

benchFlakes :: Foldable f => Float -> Float -> Float -> f Box -> Image PixelRGBA8
benchFlakes width height zoom boxes =
  renderDrawing (floor width) (floor height) background $
    foldMap (renderFlake width height zoom) boxes
    where
      background = PixelRGBA8 0 0 0 255

main :: IO ()
main = do
  let width = 800
      height = 600
      zoom = 1
  boxes <- V.fromListN 500 <$> replicateM 1000 (randomBox width height)
  writePng "flakes.png" $
    renderFlakes width height zoom boxes
  -- benching
  defaultMain [bench "flake draw" $ whnf (benchFlakes width height zoom) boxes]

